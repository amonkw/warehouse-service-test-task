"""init db

Revision ID: 0001_init
Revises:
Create Date: 2025-04-06 01:26:28.823296

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "0001_init"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "products",
        sa.Column(
            "id", sa.UUID(as_uuid=False), nullable=False, comment="Идентификатор товара"
        ),
        sa.Column(
            "name", sa.String(length=100), nullable=False, comment="Наименование товара"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "warehouses",
        sa.Column(
            "id", sa.UUID(as_uuid=False), nullable=False, comment="Идентификатор склада"
        ),
        sa.Column(
            "code",
            sa.String(length=50),
            nullable=False,
            comment="Код склада в формате WH-XXXX",
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("code"),
    )
    op.create_table(
        "movements",
        sa.Column(
            "id",
            sa.UUID(as_uuid=False),
            nullable=False,
            comment="Идентификатор перемещения",
        ),
        sa.Column(
            "movement_id",
            sa.UUID(as_uuid=False),
            nullable=False,
            comment="Идентификатор перемещения (одинаковый для отправки и приемки)",
        ),
        sa.Column(
            "source_warehouse_id",
            sa.UUID(as_uuid=False),
            nullable=True,
            comment="Склад-отправитель (null для поступлений извне)",
        ),
        sa.Column(
            "destination_warehouse_id",
            sa.UUID(as_uuid=False),
            nullable=True,
            comment="Склад-получатель (null для отправок наружу)",
        ),
        sa.Column(
            "product_id", sa.UUID(as_uuid=False), nullable=False, comment="Товар"
        ),
        sa.Column(
            "quantity", sa.Integer(), nullable=False, comment="Количество товара"
        ),
        sa.Column(
            "departure_time",
            sa.DateTime(timezone=True),
            nullable=True,
            comment="Время отправки",
        ),
        sa.Column(
            "arrival_time",
            sa.DateTime(timezone=True),
            nullable=True,
            comment="Время прибытия",
        ),
        sa.Column(
            "is_completed",
            sa.Boolean(),
            nullable=False,
            comment="Флаг завершенности перемещения",
        ),
        sa.ForeignKeyConstraint(
            ["destination_warehouse_id"],
            ["warehouses.id"],
        ),
        sa.ForeignKeyConstraint(
            ["product_id"],
            ["products.id"],
        ),
        sa.ForeignKeyConstraint(
            ["source_warehouse_id"],
            ["warehouses.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "stock_items",
        sa.Column(
            "id", sa.UUID(as_uuid=False), nullable=False, comment="Идентификатор записи"
        ),
        sa.Column(
            "warehouse_id",
            sa.UUID(as_uuid=False),
            nullable=False,
            comment="Ссылка на склад",
        ),
        sa.Column(
            "product_id",
            sa.UUID(as_uuid=False),
            nullable=False,
            comment="Ссылка на товар",
        ),
        sa.Column(
            "quantity",
            sa.Integer(),
            nullable=False,
            comment="Количество товара на складе",
        ),
        sa.CheckConstraint("quantity >= 0", name="quantity_non_negative"),
        sa.ForeignKeyConstraint(["product_id"], ["products.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(
            ["warehouse_id"], ["warehouses.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("stock_items")
    op.drop_table("movements")
    op.drop_table("warehouses")
    op.drop_table("products")
    # ### end Alembic commands ###
